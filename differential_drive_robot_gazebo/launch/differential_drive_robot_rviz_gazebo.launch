<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="world" default="$(find differential_drive_robot_gazebo)/world/obstacle.world"/> 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find differential_drive_robot_description)/urdf/differential_drive_robot.xacro"/>
  
  <arg name="rvizconfig" default="$(find differential_drive_robot_description)/rviz/urdf.rviz" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Rviz visualization node -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" />

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  
  <!-- Joint state publisher -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <!-- Robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>
    
  <!-- differential_teleop_key already has its own built in velocity smoother -->
  <node pkg="differential_drive_robot_control" type="mapping.py" name="mapping"  output="screen">
  </node>

  <node pkg="differential_drive_robot_control" type="amcl.py" name="amcl"  output="screen">
  </node>

  <node pkg="differential_drive_robot_control" type="map_to_odom.py" name="maptoodom"  output="screen">
  </node>

  <!-- Static transform publisher from map to odom --> <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom_publisher" args="0 0 0 0 0 0 /map /odom" />
  -->

  <!-- Run a Python script to send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="differential_drive_robot_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
    args="-urdf -param robot_description -model differential_drive_robot" />

</launch>
